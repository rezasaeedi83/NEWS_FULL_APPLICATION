{"ast":null,"code":"import { appendErrors as e } from \"react-hook-form\";\nimport { toNestErrors as r, validateFieldsNatively as t } from \"@hookform/resolvers\";\nvar n = function (n, o, a) {\n  return void 0 === o && (o = {\n    abortEarly: !1\n  }), void 0 === a && (a = {}), function (i, s, u) {\n    try {\n      var c = function () {\n          return l.error ? {\n            values: {},\n            errors: r((n = l.error, o = !u.shouldUseNativeValidation && \"all\" === u.criteriaMode, n.details.length ? n.details.reduce(function (r, t) {\n              var n = t.path.join(\".\");\n              if (r[n] || (r[n] = {\n                message: t.message,\n                type: t.type\n              }), o) {\n                var a = r[n].types,\n                  i = a && a[t.type];\n                r[n] = e(n, o, r, t.type, i ? [].concat(i, t.message) : t.message);\n              }\n              return r;\n            }, {}) : {}), u)\n          } : (u.shouldUseNativeValidation && t({}, u), {\n            errors: {},\n            values: l.value\n          });\n          var n, o;\n        },\n        v = Object.assign({}, o, {\n          context: s\n        }),\n        l = {},\n        f = function () {\n          if (\"sync\" === a.mode) l = n.validate(i, v);else {\n            var e = function (e, r) {\n              try {\n                var t = e();\n              } catch (e) {\n                return r(e);\n              }\n              return t && t.then ? t.then(void 0, r) : t;\n            }(function () {\n              return Promise.resolve(n.validateAsync(i, v)).then(function (e) {\n                l.value = e;\n              });\n            }, function (e) {\n              l.error = e;\n            });\n            if (e && e.then) return e.then(function () {});\n          }\n        }();\n      return Promise.resolve(f && f.then ? f.then(c) : c());\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n};\nexport { n as joiResolver };","map":{"version":3,"names":["n","joiResolver","o","a","abortEarly","i","s","u","c","l","error","values","errors","r","shouldUseNativeValidation","criteriaMode","details","length","reduce","t","path","join","message","type","types","e","concat","value","v","Object","assign","context","f","mode","validate","then","Promise","resolve","validateAsync","reject"],"sources":["/Users/rexasaeedi/Downloads/NEWS_FULL_APPLICATION/webapp/node_modules/@hookform/resolvers/joi/src/joi.ts"],"sourcesContent":["import { appendErrors, FieldError } from 'react-hook-form';\nimport { toNestErrors, validateFieldsNatively } from '@hookform/resolvers';\nimport type { ValidationError } from 'joi';\nimport { Resolver } from './types';\n\nconst parseErrorSchema = (\n  error: ValidationError,\n  validateAllFieldCriteria: boolean,\n) =>\n  error.details.length\n    ? error.details.reduce<Record<string, FieldError>>((previous, error) => {\n        const _path = error.path.join('.');\n\n        if (!previous[_path]) {\n          previous[_path] = { message: error.message, type: error.type };\n        }\n\n        if (validateAllFieldCriteria) {\n          const types = previous[_path].types;\n          const messages = types && types[error.type!];\n\n          previous[_path] = appendErrors(\n            _path,\n            validateAllFieldCriteria,\n            previous,\n            error.type,\n            messages\n              ? ([] as string[]).concat(messages as string[], error.message)\n              : error.message,\n          ) as FieldError;\n        }\n\n        return previous;\n      }, {})\n    : {};\n\nexport const joiResolver: Resolver =\n  (\n    schema,\n    schemaOptions = {\n      abortEarly: false,\n    },\n    resolverOptions = {},\n  ) =>\n  async (values, context, options) => {\n    const _schemaOptions = Object.assign({}, schemaOptions, {\n      context,\n    });\n\n    let result: Record<string, any> = {};\n    if (resolverOptions.mode === 'sync') {\n      result = schema.validate(values, _schemaOptions);\n    } else {\n      try {\n        result.value = await schema.validateAsync(values, _schemaOptions);\n      } catch (e) {\n        result.error = e;\n      }\n    }\n\n    if (result.error) {\n      return {\n        values: {},\n        errors: toNestErrors(\n          parseErrorSchema(\n            result.error,\n            !options.shouldUseNativeValidation &&\n              options.criteriaMode === 'all',\n          ),\n          options,\n        ),\n      };\n    }\n\n    options.shouldUseNativeValidation && validateFieldsNatively({}, options);\n\n    return {\n      errors: {},\n      values: result.value,\n    };\n  };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}